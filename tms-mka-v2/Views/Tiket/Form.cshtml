@using tms_mka_v2.Models;

@model tms_mka_v2.Models.Tiket
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    string backLink = Url.Action("Index");
    if (currentAction == "Add")
    {
        ViewBag.Title = "Tambah Tiket";
    }
    else
    {
        ViewBag.Title = ViewBag.name + " | Edit";
    }
}
<style>
    .countainer-img {
        width: 100%;
        height: 215px;
        overflow: hidden;
        position: relative;
        border: 1px solid;
    }

    .img-profile {
        position: absolute;
        margin: auto;
        max-height: 100%;
        max-width: 100%;
        left: -100%;
        right: -100%;
        top: -100%;
        bottom: -100%;
    }
</style>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
    </div>
    <div class="portlet-body form">
        @using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @class = "form-horizontal form-label-left input_mask", @id = "formsubmit" }))
        {

            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div class="col col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoTiket, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.NoTiket, new { @class = "form-control input-sm", @ReadOnly = "true" })
                            @Html.ValidationMessageFor(model => model.NoTiket)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdCustomer, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            <div class="input-group input-group-sm">
                                @Html.HiddenFor(model => model.IdCustomer)
                                @Html.TextBoxFor(model => model.KodeCustomer, new { @class = "form-control input-sm", @ReadOnly = "true" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modalGridDriver">Browse</button>
                                </span>
                                @Html.ValidationMessageFor(model => model.IdCustomer)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NamaPelapor, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.NamaPelapor, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TanggalLapor, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.TanggalLapor, new { @class = "form-control-datepicker" })
                            @Html.ValidationMessageFor(model => model.TanggalLapor)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DitujukanKe, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            <input id="ditujukan" />
                            @Html.HiddenFor(model => model.DitujukanKe)
                            @Html.ValidationMessageFor(model => model.DitujukanKe)
                        </div>
                    </div>
                </div>
                <div class="col col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Kategori, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.DropDownListFor(model => model.Kategori, new SelectList(
                          new List<Object>{
                            new { value = "Terlambat"},
                            new { value = "Barang Kurang"},
                            new { value = "Barang Rusak"},
                            new { value = "Kerusakan Unit"},
                            new { value = "Suhu Tidak Baik"},
                            new { value = "Dokument kurang"},
                            new { value = "Kotor"},
                            new { value = "Info Harga"},
                            new { value = "Info Tagihan"},
                            new { value = "Info Kecelakaan"},
                            new { value = "Info Posisi"},
                            new { value = "Info Suhu"},
                            new { value = "Info lainnya"}
                          }, "value", "value", Model.Kategori))
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Prioritas, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.DropDownListFor(model => model.Prioritas, new SelectList(
                          new List<Object>{
                            new { value = "High"},
                            new { value = "Normal"},
                            new { value = "Low"}
                          }, "value", "value", Model.Prioritas))
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @Html.DropDownListFor(model => model.Status, new SelectList(
                          new List<Object>{
                            new { value = "Open"},
                            new { value = "On-Progres"},
                            new { value = "Closed"}
                          }, "value", "value", Model.Status))
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="countainer-img">
                        <img id="profile-foto" src="@User.path_foto" class="img-profile" alt="">
                    </div>
                    <br />
                    <span class="username username-hide-mobile" style="text-align:center;vertical-align:middle;">
                        @User.firstname @User.lastname
                    </span>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.TextBoxFor(model => model.Subject, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keluhan, new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.TextAreaFor(model => model.Keluhan, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-1">SO / DN</label>
                        <div class="col-md-11">
                            <button class="btn btn-success" type="button" data-toggle="modal" data-target="#modalSo"> Browse </button>
                            @Html.HiddenFor(model => model.IdSo)
                            @Html.HiddenFor(model => model.IdSoKontrak)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <div id="PartialSo"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-1">Attachment</label>
                        <div class="col-md-11">
                            <input name="files" id="files" type="file"/>
                            @Html.HiddenFor(model => model.Attactment)
                        </div>
                    </div>
                </div>
            </div>

            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <a href="@backLink" class="btn btn-link">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>

<div id="modalGridDriver" class="modal fade bs-modal-lg" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div id="modalForm" class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">List Customer</h4>
            </div>
            <div class="modal-body">
                <div id="GridDriver"></div>
            </div>
        </div>
    </div>
</div>
<div id="modalSo" class="modal fade bs-modal-full" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-full">
        <div id="modalForm" class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">List Sales Order</h4>
            </div>
            <div class="modal-body">
                <div id="GridSo"></div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

    function SelectDriver(e) {
        e.preventDefault();
        var data = this.dataItem(getDataRowGrid(e));
        $('#IdCustomer').val(data.Id);
        $('#KodeCustomer').val(data.CustomerCode + " - " + data.CustomerNama);
        $('#modalGridDriver').modal('hide');
    }

    function selectSo(e) {
        e.preventDefault();
        var data = this.dataItem(getDataRowGrid(e));
        $.ajax({
            url: 'GetPartialSo?idSo=' + data.Id + '&ListIdSo=' + data.IdSoKontrak,
            contentType: 'application/html; charset=utf-8',
            type: 'GET',
            dataType: 'html'
        }).success(function (res) {
            $("#IdSo").val(data.Id);
            $("#IdSoKontrak").val(data.IdSoKontrak);
            $('#PartialSo').html(res);
        })

        $('#modalSo').modal('hide');
    }

    $(document).ready(function () {
        if ('@Model.IdSo' != 0 && '@Model.IdSo' != '')
        {
            $.ajax({
                url: 'GetPartialSo?idSo=' + '@Model.IdSo' + '&ListIdSo=' + '@Model.IdSoKontrak',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'
            }).success(function (res) {
                $('#PartialSo').html(res);
            })
        }

        $("#Kategori").kendoDropDownList();
        $("#Prioritas").kendoDropDownList();
        $("#Status").kendoDropDownList();
        dsTraining = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetCS")',
                    dataType: "json"
                },
            },
        });

        var dummy = [];
        @if (Model.DitujukanKe != "" && Model.DitujukanKe != null)
            {
                foreach (var val in Model.DitujukanKe.Split(','))
                {
                    <text> dummy.push(@val); </text>
                }
            }

        $("#ditujukan").kendoMultiSelect({
            dataTextField: "Nama",
            dataValueField: "Id",
            dataSource: dsTraining,
            value: dummy,
            filter: 'contains'
        }).data("kendoMultiSelect");

        var dsAtt = [];
        @if (Model.Attactment != "" && Model.Attactment != null)
            {
                <text> dsAtt.push({ name: '@Model.Attactment' }); </text>
            }

        $("#files").kendoUpload({
            multiple: false,
            files: dsAtt,
            async: {
                saveUrl: "/FileManagement/Upload?Dir=~/Uploads/Driver",
                removeUrl: "/FileManagement/Delete?Dir=~/Uploads/Driver&temp=true",
                autoUpload: true
            },
            success: function (e, options) {
                if (e.operation == "upload") {
                    $(".k-filename:contains('" + e.files[0].name + "')").text('').append('<a href="' + e.response.imagelink + '" target="_blank">' + e.response.fileName + '</a>');
                    e.files[0].name = e.response.fileName;
                    alert(e.response.fileName)
                    $('#Attactment').val(e.response.fileName);
                } else if (e.operation == "remove") {
                    $('#Attactment').val();
                }
            },
            select: onSelectUpload,
        }).data("kendoUpload");
        var filename = $("#files").data("kendoUpload").wrapper.find(".k-filename")
        for (var i = 0; i < filename.length; i++) {
            $(filename[i]).html("<a href='/Uploads/Driver/" + dsAtt[i].name + "' target='_blank'>" + dsAtt[i].name + "</a>")
        }

        //Driver
        var dsDriver = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("Binding", "Customer")',
                    dataType: "json"
                },
            },
            schema: {
                total: "total",
                data: "data",
                model: {
                    fields: {
                        "Id": { type: "number" },
                        "CustomerCode": { type: "string" },
                        "CustomerNama": { type: "string" },
                    }
                }
            },
            pageSize: 10,
            pageable: true,
            serverFiltering: true,
            serverPaging: true,
            serverSorting: true,
            sortable: true,
            //sort: { field: "SubmittedDate", dir: "desc" }
        })

        gridDriver = $("#GridDriver").kendoGrid({
            dataSource: dsDriver,
            filterable: kendoGridFilterable,
            sortable: true,
            reorderable: true,
            resizable: true,
            pageable: true,
            columns: [
                {
                    command: [
                     {
                         name: "select",
                         text: "Select",
                         click: SelectDriver,
                         imageClass: "glyphicon glyphicon-ok",
                         template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=iconClass# #=imageClass#"></span></a>'
                     }
                    ],
                    width: "50px"
                },
                {
                    field: "CustomerCode",
                    title: "Kode Pelapor"
                },
                {
                    field: "CustomerCodeOld",
                    title: "Kode Nama"
                },
                {
                    field: "CustomerNama",
                    title: "Nama Pelapor"
                },

            ],
        }).data("kendoGrid");

        var ds = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("Binding","ListOrder")',
                    dataType: "json"
                },
            },
            schema: {
                total: "total",
                data: "data",
                model: {
                    fields: {
                        "Id": { type: "number" },
                        "IdSoKontrak": { type: "number" },
                        "DN": { type: "string" },
                        "JenisOrder": { type: "string" },
                        "SONumber": { type: "string" },
                        "TanggalMuat": { type: "date" },
                        "NamaCustomer": { type: "string" },
                        "StrProduct": { type: "string" },
                        "Rute": { type: "string" },
                        "StrMultidrop": { type: "string" },
                        "StrJenisTruck": { type: "string" },
                        "VehicleNo": { type: "string" },
                        "Driver1": { type: "string" },
                        "Keterangan": { type: "string" },
                    }
                }
            },
            pageSize: 5,
            pageable: true,
            sortable: true,
        });

        gridIndex = $("#GridSo").kendoGrid({
            dataSource: ds,
            filterable: kendoGridFilterable,
            sortable: true,
            reorderable: true,
            resizable: true,
            scrollable: true,
            pageable: true,
            groupable: true,
            columns: [
                {
                    command: [
                        {
                            name: "select",
                            text: "Select",
                            click: selectSo,
                            imageClass: "glyphicon glyphicon-ok",
                            template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=iconClass# #=imageClass#"></span></a>'
                        }
                    ],
                    width: "50px"
                },
                { field: "JenisOrder", title: "Jenis Order", width: "100px", },
                { field: "DN", title: "DN", width: "130px" },
                { field: "SONumber", title: "No SO", width: "120px" },
                { field: "TanggalMuat", title: "Tgl Muat", width: "100px", template: "#= TanggalMuat != null ? kendo.toString(kendo.parseDate(TanggalMuat, 'yyyy-MM-dd'), 'dd/MM/yyyy') : ''#" },
                { field: "NamaCustomer", title: "Customer", width: "200px" },
                { width: "250px", field: "Driver1", title: "Driver", },
                { field: "StrProduct", title: "Jenis Barang", width: "120px" },
                { field: "StrJenisTruck", title: "Jenis Truck", width: "100px" },
                { field: "Rute", title: "Rute" },
                { field: "StrMultidrop", title: "Multidrop", width: "150px" },
                { width: "120px", field: "VehicleNo", title: "Vehicle No", },
                { width: "150px", field: "Keterangan", title: "Keterangan" },
            ],
        }).data("kendoGrid");
    });

    $('#formsubmit').submit(function (e) {
        var dummyData = [];
        var data = $("#ditujukan").data("kendoMultiSelect").value();
        $.each(data, function (idx, val) {
            dummyData.push(val);
        });
        $("#DitujukanKe").val(dummyData.join(','));
    })
</script>
}
