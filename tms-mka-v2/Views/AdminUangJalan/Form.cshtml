@using tms_mka_v2.Models;
@model tms_mka_v2.Models.AdminUangJalan
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = ViewBag.postData == null ? (string)ViewContext.RouteData.Values["action"] : ViewBag.postData;
    string backLink = Url.Action("Index");
    int idxBor = Model.ModelListBorongan.Count();
    int idJnsTruck = -1;
}
<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
    </div>
    <div class="portlet-body form">
        @using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @class = "form-horizontal form-label-left input_mask", @id = "formsubmit" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.IdSalesOrder)
            <input type='hidden' value="@ViewBag.Status" id='so_status'>
            <input type='hidden' value="@ViewBag.SisaPerjalananSblmny" id='SisaPerjalananSblmny'>
            <input type='hidden' value="@ViewBag.TotalKasbon" id='TotalKasbonDriver'>
            <input type='hidden' value="@ViewBag.TotalKlaim" id='TotalKlaimDriver'>
            <ul class="nav nav-tabs" id="wtab">
                <li class="active">
                    <a href="#tab_So" data-toggle="tab">Basic Info</a>
                </li>
                <li>
                    <a href="#tab_Borongan" data-toggle="tab">Borongan</a>
                </li>
                @for (int i = 1; i <= Model.ModelListRemoval.Count; i++)
                {
                    <li>
                        @{ var idx = i - 1;}
                        <a href="#tab_Borongan_@idx" data-toggle="tab">Removal @i </a>
                    </li>
                }
            </ul>
            <div class="tab-content">
                <div class="tab-pane  active in" id="tab_So">
                    @if (Model.ModelOncall != null)
                    {
                        @Html.Partial("SalesOrderOncall/_PartialFormReadOnly", Model.ModelOncall)
                        if (Model.ModelOncall.JenisTruckItemId != null){
                            idJnsTruck = Model.ModelOncall.JenisTruckItemId.Value;
                        }
                    }
                    else if (Model.ModelPickup != null)
                    {
                        @Html.Partial("SalesOrderPickup/_PartialFormReadOnly", Model.ModelPickup)
                        if (Model.ModelPickup.JenisTruckItemId != null){
                            idJnsTruck = Model.ModelPickup.JenisTruckItemId.Value;
                        }
                    }
                    else if (Model.ModelKonsolidasi != null)
                    {
                        @Html.Partial("SalesOrderProsesKonsolidasi/_PartialFormReadOnly", Model.ModelKonsolidasi)
                        if (Model.ModelKonsolidasi.JenisTruckItemId != null){
                            idJnsTruck = Model.ModelKonsolidasi.JenisTruckItemId.Value;
                        }
                    }
                </div>
                <div class="tab-pane fade" id="tab_Borongan">
                    @if (Model.ModelListRemoval.Count == 0)
                    {
                        @Html.Partial("_BoronganOnCall", Model)
                    }
                    else
                    {
                        @Html.Partial("_BoronganOnCallView", Model)
                    }
                </div>
                @for (int i = 0; i < Model.ModelListRemoval.Count; i++)
                {
                    <div class="tab-pane fade" id="tab_Borongan_@i">
                        @if ((i + 1) == Model.ModelListRemoval.Count)
                        {
                            @Html.Partial("_Removal", Model.ModelListRemoval[i])
                        }
                        else
                        {
                            @Html.Partial("_RemovalView", Model.ModelListRemoval[i])
                        }
                    </div>
                }
            </div>
            if (Model.ModelListRemoval.Count == 0)
            {
                <div class="ln_solid"></div>
                <hr />
                <div class="form-group">
                    <div class="col-md-8">
                        <button type="submit" class="btn btn-success" value="Save" name="btnsave">Save</button>
                        <button type="submit" class="btn btn-success" value="Submit" name="btnsave">Submit</button>
                        <a href="@backLink" class="btn btn-link">Cancel</a>
                    </div>
                </div>
            }
        }
    </div>
</div>
<div id="ModalHistoryJalan" class="modal fade bs-modal-full" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-full">
        <div id="modalForm" class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">List Sales Order</h4>
            </div>
            <div class="modal-body">
                <div id="GridHistoryJalanDriver"></div>
            </div>
        </div>
    </div>
</div>
@*Modal Solar*@
<div id="ModalSolar" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 id="judulTf" class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="modalForm" class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-6">Nama SPBU</label>
                                <div class="col-md-6">
                                    <input type="text" id="_NamaSPBU" name="_NamaSPBU" required class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-6">Jumlah</label>
                                <div class="col-md-6">
                                    <input type="text" id="_JmlTf" name="_JmlTf" required data-required-msg="Jumlah Transfer harus diisi." class="form-control-numeric-idr" />
                                    <span class="k-invalid-msg" data-for="_JmlTf"></span>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn green" onclick="saveSolar()">Submit</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="ModalKapal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 id="judulTf" class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="modalForm" class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-6">Nama Penyebrangan</label>
                                <div class="col-md-6">
                                    <input type="text" id="_NamaPenyebrangan" name="_NamaPenyebrangan" required class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-6">Jumlah</label>
                                <div class="col-md-6">
                                    <input type="text" id="_JmlTfPenyebrangan" name="_JmlTfPenyebrangan" required data-required-msg="Jumlah Transfer harus diisi." class="form-control-numeric-idr" />
                                    <span class="k-invalid-msg" data-for="_JmlTf"></span>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn green" onclick="savePenyebrangan()">Submit</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="ModalUang" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 id="judulTf" class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="modalForm" class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-6">Keterangan</label>
                                <div class="col-md-6">
                                    <input type="text" id="_Keterangan" name="_Keterangan" required class="form-control" readonly/>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-6">Jumlah</label>
                                <div class="col-md-6">
                                    <input type="text" id="_JmlTfUang" name="_JmlTfUang" required data-required-msg="Jumlah Transfer harus diisi." class="form-control-numeric-idr" />
                                    <span class="k-invalid-msg" data-for="_JmlTf"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-6">Tanggal</label>
                                <div class="col-md-6">
                                    <input type="text" id="_Tgl" name="_Tgl" class="form-control-datepickerdis"/>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn green" onclick="saveUang()">Submit</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var dsBoronganDasar = [];
        var dsBoronganTambahan = [];
        var dsSolar = [], dsKapal = [], dsGridUang = [];
        var idxBor = @idxBor;
        var IdSo = @Model.IdSalesOrder;
        var IdJnsTruck = @idJnsTruck;
        var total_cash;
        var mod_total_cash;
        var total_tf;
        call_piutang()
        if(parseFloat($('#SisaPerjalananSblmny').val()) > 0){
            setTimeout(function () {
                AddPotonganLain1()
                $('#potonganLain10 #ModelListPotonganLain_0__Keterangan').val('Sisa Perjalanan @ViewBag.SOSblmny')
                CalBoronganDef();
            }, 1000);
        }
            setTimeout(function () {
                $('#TotalKasbon').val($('#TotalKasbonDriver').val())
                $("#TotalKasbon").data("kendoNumericTextBox").value($('#TotalKasbonDriver').val());
                $('#TotalKlaim').val($('#TotalKlaimDriver').val())
                $("#TotalKlaim").data("kendoNumericTextBox").value($('#TotalKlaimDriver').val());
                CalculatePotongan()
            }, 1000);
        @foreach (var item in Model.ModelListSpbu)
            {
                <text>
        dsSolar.push({
            NamaSpbu: '@item.NamaSpbu',
            value: @item.Value,
        })
        </text>
            }
        @foreach (var item in Model.ModelListKapal)
            {
                <text>
        dsKapal.push({
            NamaPenyebrangan: '@item.NamaPenyebrangan',
            value: @item.Value,
        })
        </text>
            }
        @foreach (var item in Model.ModelListTf)
            {
                <text>
        dsGridUang.push({
            Nama: '@item.Nama',
            value: @item.Value,
            Nama1: '@item.Nama',
            value1: @item.Value,
            Tanggal: '@item.Tanggal',
        })
        </text>
            }



        function CalculateBorongan() {
            var total = 0;
            total = total + $("#NilaiBorongan").data("kendoNumericTextBox").value() + $("#Kawalan").data("kendoNumericTextBox").value() + $("#Timbangan").data("kendoNumericTextBox").value() +
                $("#Karantina").data("kendoNumericTextBox").value() + $("#SPSI").data("kendoNumericTextBox").value() + $("#Multidrop").data("kendoNumericTextBox").value();

            //tambahan rute
            for (var i = 0 ; i <= idxRute ; i++)
            {
                if ($("#ModelListTambahanRute_" + i + "__IsDelete").val() == "false" || $("#ModelListTambahanRute_" + i + "__IsDelete").val() == "False")
                {
                    total = total + $("#ModelListTambahanRute_" + i + "__value").data("kendoNumericTextBox").value();
                }
            }

            //tambahan lain
            for (var i = 0 ; i <= idxLain ; i++) {
                if ($("#ModelListTambahanLain_" + i + "__IsDelete").val() == "false" || $("#ModelListTambahanLain_" + i + "__IsDelete").val() == "False") {
                    total = total + $("#ModelListTambahanLain_" + i + "__Value").data("kendoNumericTextBox").value();
                }
            }

            $("#TotalBorongan").data("kendoNumericTextBox").value(total);
        }

        function CalculatePotongan() {
            var total = 0;
            total = total + $("#KlaimDriver1").data("kendoNumericTextBox").value() + $("#KlaimDriver2").data("kendoNumericTextBox").value() ;
            //Potongan Lain
            for (var i = 0 ; i <= idxPotongan ; i++)
            {
                if ($("#ModelListPotonganLain_" + i + "__IsDelete").val() == "false" || $("#ModelListPotonganLain_" + i + "__IsDelete").val() == "False")
                {
                    total = total + $("#ModelListPotonganLain_" + i + "__Value").data("kendoNumericTextBox").value();
                }
            }

            var kasbon = $("#KasbonDriver1").data("kendoNumericTextBox").value() + $("#KasbonDriver2").data("kendoNumericTextBox").value();
            var klaim = $("#KlaimDriver1").data("kendoNumericTextBox").value() + $("#KlaimDriver2").data("kendoNumericTextBox").value();

            $("#TotalKasbon").data("kendoNumericTextBox").value($("#TotalKasbonDriver").val()-(total + kasbon));
            $("#TotalKlaim").data("kendoNumericTextBox").value($("#TotalKlaimDriver").val()-klaim);
            $("#TotalPotonganDriver").data("kendoNumericTextBox").value(total + kasbon);
            sisa_potongan = parseFloat($('#TotalPotonganDriver').val())
            if (parseFloat($("#SaldoB").val()) >= sisa_potongan){
                $('#PotonganB').data("kendoNumericTextBox").value(sisa_potongan);
                $('#SisaSaldoB').data("kendoNumericTextBox").value(parseFloat($("#SaldoB").val()) - sisa_potongan);
            }
            else{
                $('#PotonganB').data("kendoNumericTextBox").value($("#SaldoB").val());
                $('#SisaSaldoB').data("kendoNumericTextBox").value(0);
                sisa_potongan = sisa_potongan - parseFloat($("#SaldoB").val())
                if (parseFloat($("#SaldoP").val()) >= sisa_potongan){
                    $('#PotonganP').data("kendoNumericTextBox").value(sisa_potongan);
                    $('#SisaSaldoP').data("kendoNumericTextBox").value(parseFloat($("#SaldoP").val()) - sisa_potongan);
                }
                else{
                    $('#PotonganP').data("kendoNumericTextBox").value($("#SaldoP").val());
                    $('#SisaSaldoP').data("kendoNumericTextBox").value(0);
                    sisa_potongan = sisa_potongan - $("#SaldoP").val()
                    if (parseFloat($("#SaldoK").val()) >= sisa_potongan){
                        $('#PotonganK').data("kendoNumericTextBox").value(sisa_potongan);
                        $('#SisaSaldoK').data("kendoNumericTextBox").value(parseFloat($("#SaldoK").val()) - sisa_potongan);
                    }
                    else{
                        $('#PotonganK').data("kendoNumericTextBox").value($("#SaldoK").val());
                        $('#SisaSaldoK').data("kendoNumericTextBox").value(0);
                        sisa_potongan = sisa_potongan - $("#SaldoK").val()
                        $('#PotonganT').data("kendoNumericTextBox").value(sisa_potongan);
                        $('#SisaSaldoT').data("kendoNumericTextBox").value(parseFloat($("#SaldoT").val()) + sisa_potongan);
                    }
                }
            }
        }

        var gridSpbu, gridKapal, gridUang;
        $(document).ready(function () {
            if($('#so_status').val() == 'batal'){
                alert("Admin uang jalan tidak dapat diproses karena sudah batal")
                window.location.href = "/AdminUangJalan";
            }
            else if($('#so_status').val() == 'sudah diproses'){
                alert("Admin uang jalan sudah diproses")
                window.location.href = "/AdminUangJalan";
            }
            dsBoronganTambahan = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: '/DataBorongan/GetBoronganTambahan?idTruck=' + IdJnsTruck,
                        dataType: "json"
                    },
                },
            });

            gridSpbu = $("#gridSolar").kendoGrid({
                dataSource: {
                    data: dsSolar,
                    batch: true,
                    schema: {
                        model: {
                            fields: {
                                NamaSpbu: { type: "string"},
                                value: { type: "number"},
                            }
                        }
                    },
                    aggregate: [{ field: "value", aggregate: "sum" }],
                },
                resizable: true,
                columns: [
                    {
                        command: [
                            {
                                name: "edit",
                                text: "edit",
                                click: editItem,
                                imageClass: "glyphicon glyphicon-edit",
                                template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=imageClass#"></span></a>'
                            },
                        ],
                        width: "50px"
                    },
                { field: "NamaSpbu", title: "SPBU" },
                { field: "value", title: "Rp", footerTemplate: "Total : Rp #= sum == null ? 0 : kendo.format('{0:n}', sum) #", template: 'Rp #: value == null ? 0 : kendo.format("{0:n}", value)#', },
                ],
            }).data("kendoGrid");

            gridKapal = $("#gridKapal").kendoGrid({
                dataSource: {
                    data: dsKapal,
                    batch: true,
                    schema: {
                        model: {
                            fields: {
                                NamaPenyebrangan: { type: "string" },
                                value: { type: "number" },
                            }
                        }
                    },
                    aggregate: [{ field: "value", aggregate: "sum" }],
                },
                resizable: true,
                columns: [
                {
                        command: [
                            {
                                name: "edit",
                                text: "edit",
                                click: editItemPenyebrangan,
                                imageClass: "glyphicon glyphicon-edit",
                                template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=imageClass#"></span></a>'
                            },
                        ],
                        width: "50px"
                    },
                { field: "NamaPenyebrangan", title: "Penyebrangan" },
                { field: "value", title: "Rp", footerTemplate: "Total : Rp #= sum == null ? 0 : kendo.format('{0:n}', sum) #", template: 'Rp #: value == null ? 0 : kendo.format("{0:n}", value)#', },
                ],
            }).data("kendoGrid");

            gridUang = $("#gridUang").kendoGrid({
                dataSource: {
                    data: dsGridUang,
                    batch: true,
                    schema: {
                        model: {
                            fields: {
                                Nama: { type: "string", editable: false},
                                value: { type: "number" , editable: false},
                                Tanggal: { type: "Date"}
                            }
                        }
                    },
                    aggregate: [{ field: "value1", aggregate: "sum" }],
                },
                resizable: true,
                columns: [
                    {
                        command: [
                            {
                                name: "edit",
                                text: "edit",
                                click: editItemUang,
                                imageClass: "glyphicon glyphicon-edit",
                                template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=imageClass#"></span></a>'
                            },
                        ],
                        width: "50px"
                    },
                { field: "Nama1", title: "Keterangan" },
                { field: "value1", title: "Rp", template: 'Rp #: value1 == null ? 0 : kendo.format("{0:n}", value1)#', footerTemplate: "Total : Rp #= sum == null ? 0 : kendo.format('{0:n}', sum) #"},
                { field: "Tanggal", title: "Tanggal", editor: TanggalEditor, format: "{0:dd/MM/yyyy}" },
                ],
            }).data("kendoGrid");

            $.ajax({
                url: '/DataBorongan/GetDataForDispatch?idSo=' + '@Model.IdSalesOrder',
                type: "POST",
                success: function (res) {
                    dsBoronganDasar = jQuery.parseJSON(res);

                    $("#ModelListBorongan_0__IdDataBorongan").kendoComboBox({
                        dataSource: dsBoronganDasar,
                        dataTextField: "NamaBorongan",
                        dataValueField: "Id",
                        filter: "contains",
                        suggest: true,
                        index:0,
                        change: function (e) {
                            CalBoronganDef();
                        },
                    });

                    for (var i = 1 ; i <= idxBor ; i++) {
                        $("#ModelListBorongan_"+i+"__IdDataBorongan").kendoComboBox({
                            dataSource: dsBoronganDasar,
                            dataTextField: "NamaBorongan",
                            dataValueField: "Id",
                            filter: "contains",
                            suggest: true,
                            index:0,
                            change: function (e) {
                                CalBoronganDef();
                            },
                        });
                    }

                    @if (Model.Id == 0)
                    {
                        <text>
                    CalBoronganDef();
                    </text>
                    }
                },
                error:function(){
                    $("#ModelListBorongan_0__IdDataBorongan").kendoComboBox({
                        dataTextField: "NamaBorongan",
                        dataValueField: "Id",
                        filter: "contains",
                        suggest: true,
                        index:0,
                    });
                    for (var i = 1 ; i <= idxBor ; i++) {
                        $("#ModelListBorongan_"+i+"__IdDataBorongan").kendoComboBox({
                            dataTextField: "NamaBorongan",
                            dataValueField: "Id",
                            filter: "contains",
                            suggest: true,
                            index:0,
                            change: function (e) {
                                CalBoronganDef();
                            },
                        });
                    }
                }
            });

            //tambahan rute
            for (var i = 0 ; i <= idxRute ; i++) {
                var txtval = $('.valRute' + i).kendoNumericTextBox({
                    min: 0,
                    max: 1000000000000000000,
                    decimals: 2,
                    format: "Rp ###,###.00 ",
                    spinners: false,
                }).data("kendoNumericTextBox");

                CreateCboRute(i, txtval);
            }

            //tambahan lain
            for (var i = 0 ; i <= idxLain ; i++) {
                $('.valLain' + i).kendoNumericTextBox({
                    min: 0,
                    max: 1000000000000000000,
                    decimals: 2,
                    format: "Rp ###,###.00 ",
                    spinners: false,
                    change: function(e){
                        CalBoronganDef();
                    }
                });
            }

            //Potongan Lain
            for (var i = 0 ; i <= idxLain ; i++) {
                $('.valPotonganDriver1' + i).kendoNumericTextBox({
                    min: 0,
                    max: 1000000000000000000,
                    decimals: 2,
                    format: "Rp ###,###.00 ",
                    spinners: false,
                    change: function(e){
                        CalBoronganDef();
                    }
                });
                $('.valPotonganDriver2' + i).kendoNumericTextBox({
                    min: 0,
                    max: 1000000000000000000,
                    decimals: 2,
                    format: "Rp ###,###.00 ",
                    spinners: false,
                    change: function(e){
                        CalBoronganDef();
                    }
                });
            }

            //kasbon
            $('#KasbonDriver1').kendoNumericTextBox({
                min: 0,
                max: 1000000000000000000,
                decimals: 2,
                format: "Rp ###,###.00 ",
                spinners: false,
                change: function(e){
                    CalBoronganDef();
                }
            });
            $('#KasbonDriver2').kendoNumericTextBox({
                min: 0,
                max: 1000000000000000000,
                decimals: 2,
                format: "Rp ###,###.00 ",
                spinners: false,
                change: function(e){
                    CalBoronganDef();
                }
            });
            $('#KlaimDriver1').kendoNumericTextBox({
                min: 0,
                max: 1000000000000000000,
                decimals: 2,
                format: "Rp ###,###.00 ",
                spinners: false,
                change: function(e){
                    CalBoronganDef();
                }
            });
            $('#KlaimDriver2').kendoNumericTextBox({
                min: 0,
                max: 1000000000000000000,
                decimals: 2,
                format: "Rp ###,###.00 ",
                spinners: false,
                change: function(e){
                    CalBoronganDef();
                }
            });
        })

        function CalBoronganDef()
        {
            $("#NilaiBorongan").data("kendoNumericTextBox").value(0);
            $("#Kawalan").data("kendoNumericTextBox").value(0);
            $("#Timbangan").data("kendoNumericTextBox").value(0);
            $("#Karantina").data("kendoNumericTextBox").value(0);
            $("#SPSI").data("kendoNumericTextBox").value(0);
            $("#Multidrop").data("kendoNumericTextBox").value(0);
            $("#TotalAlokasi").data("kendoNumericTextBox").value(0);

            dsGridUang = [];
            dsSolar = [];
            dsKapal = [];
            //borongan
            var totalNilaiBorongan = 0;
            for (var i = 0 ; i < idxBor ; i++) {
                if ($("#ModelListBorongan_" + i + "__IsDelete").val() == "false" || $("#ModelListBorongan_" + i + "__IsDelete").val() == "False") {
                    var id = $("#ModelListBorongan_" + i + "__IdDataBorongan").val();
                    var dsDummy = jQuery.grep(dsBoronganDasar, function (e) {
                        return e.Id == id;
                    });

                    if(dsDummy.length == 1)
                    {
                        totalNilaiBorongan = totalNilaiBorongan + (dsDummy[0].Pembulatan - (dsDummy[0].Kawalan + dsDummy[0].Timbangan + dsDummy[0].Karantina + dsDummy[0].SPSI + dsDummy[0].MultiDrop));
                        $("#NilaiBorongan").data("kendoNumericTextBox").value(totalNilaiBorongan);
                        $("#Kawalan").data("kendoNumericTextBox").value($("#Kawalan").data("kendoNumericTextBox").value () + dsDummy[0].Kawalan);
                        $("#Timbangan").data("kendoNumericTextBox").value($("#Timbangan").data("kendoNumericTextBox").value() + dsDummy[0].Timbangan);
                        $("#Karantina").data("kendoNumericTextBox").value($("#Karantina").data("kendoNumericTextBox").value() + dsDummy[0].Karantina);
                        $("#SPSI").data("kendoNumericTextBox").value($("#SPSI").data("kendoNumericTextBox").value() + dsDummy[0].SPSI);
                        $("#Multidrop").data("kendoNumericTextBox").value($("#Multidrop").data("kendoNumericTextBox").value() + dsDummy[0].MultiDrop);
                        $("#TotalAlokasi").data("kendoNumericTextBox").value($("#TotalAlokasi").data("kendoNumericTextBox").value() + dsDummy[0].TotalAlokasiPembulatan);
                        //solar
                        dsDummy[0].listSpbuBorongan.forEach(function (item) {
                            var ketemu = false;
                            if(item.value != null)
                            {
                                for (var idx = 0; idx < dsSolar.length; idx++) {
                                    if(dsSolar[idx].NamaSpbu == item.NamaSpbu){
                                        dsSolar[idx].value = dsSolar[idx].value + item.value;
                                        ketemu = true;
                                    }
                                }
                                if(!ketemu)
                                {
                                    dsSolar.push({
                                        NamaSpbu: item.NamaSpbu,
                                        value: item.value,
                                    })
                                }
                            }
                        });
                        //kapal
                        dsDummy[0].listKapalBorongan.forEach(function (item) {
                            var ketemu = false;
                            if(item.value != null)
                            {
                                for (var idx = 0; idx < dsKapal.length; idx++) {
                                    if(dsKapal[idx].NamaPenyebrangan == item.NamaPenyebrangan){
                                        dsKapal[idx].value = dsKapal[idx].value + item.value;
                                        ketemu = true;
                                    }
                                }
                                if(!ketemu)
                                {
                                    dsKapal.push({
                                        NamaPenyebrangan: item.NamaPenyebrangan,
                                        value: item.value,
                                    })
                                }
                            }
                        });
                        //uang
                        var dummyTotal = 0;
                        dsDummy[0].listTfBorongan.forEach(function (item) {
                            var ketemu = false;
                            for (var idx = 0; idx < dsGridUang.length; idx++) {
                                if(dsGridUang[idx].Nama == item.Nama){
                              //      dsGridUang[idx].value = dsGridUang[idx].value + item.value;
                                    ketemu = true;
                                    dummyTotal = dummyTotal + dsGridUang[idx].value;
                                }
                            }
    //                        if(!ketemu)
      //                      {
                                var _date = new Date($('#tglmuatbuatuang').val());
                                var leadTime = item.LeadTime == null ? 0 : item.LeadTime;
                                var currDate = new Date(_date.setDate(_date.getDate() + leadTime));
                                dummyTotal = dummyTotal + item.value;
                                dsGridUang.push({
                                    Nama: ketemu == true ? item.Nama + ' - 2' : item.Nama,
                                    value: item.value,
                                    Nama1: ketemu == true ? item.Nama + ' - 2' : item.Nama,
                                    value1: item.value,
                                    Tanggal: currDate,
                                })
        //                    }
                        });

                        ketemu = false;
                        for (var idx = 0; idx < dsGridUang.length; idx++) {
                            if(dsGridUang[idx].Nama == "Tunai"){
                                dsGridUang[idx].value = dsGridUang[idx].value + dsDummy[0].AlokasiCash;
                                ketemu = true;
                            }
                        }
//                      if(!ketemu) {
//                            if(dsDummy[0].AlokasiCash != null)
  //                          {
                                dsGridUang.push({
                                    Nama: "Tunai",
                                    value: dsDummy[0].AlokasiCash,
                                    Nama1: "Tunai",
                                    value1: dsDummy[0].AlokasiCash,
                                    Tanggal: new Date($('#tglmuatbuatuang').val()),
                                })
    //                        }
  //                    }
                    }
                }
            }

            for (var i = 0 ; i < idxRute ; i++) {
                if ($("#ModelListTambahanRute_" + i + "__IsDelete").val() == "false" || $("#ModelListTambahanRute_" + i + "__IsDelete").val() == "False")
                {
                    if($("#ModelListTambahanRute_" + i + "__IdDataBorongan").data("kendoComboBox").selectedIndex != -1 && $("#ModelListTambahanRute_" + i + "__IdDataBorongan").data("kendoComboBox").text != "") {
                        var id = $("#ModelListTambahanRute_" + i + "__IdDataBorongan").val();
                        var dsDummy = jQuery.grep(dsBoronganTambahan._data, function (e) {
                            return e.Id == id;
                        });
                        if(dsDummy.length == 1)
                        {
                            $("#TotalAlokasi").data("kendoNumericTextBox").value($("#TotalAlokasi").data("kendoNumericTextBox").value() + dsDummy[0].TotalAlokasiPembulatan);
                            //solar
                            dsDummy[0].listSpbuBorongan.forEach(function (item) {
                                var ketemu = false;
                                if(item.value != 0 && item.value != null)
                                {
                                    for (var idx = 0; idx < dsSolar.length; idx++) {
                                        if(dsSolar[idx].NamaSpbu == item.NamaSpbu){
                                            dsSolar[idx].value = dsSolar[idx].value + item.value;
                                            ketemu = true;
                                        }
                                    }
                                    if(!ketemu)
                                    {
                                        dsSolar.push({
                                            NamaSpbu: item.NamaSpbu,
                                            value: item.value,
                                        })
                                    }
                                }
                            });
                            //kapal
                            dsDummy[0].listKapalBorongan.forEach(function (item) {
                                var ketemu = false;
                                if(item.value != 0 && item.value != null)
                                {
                                    for (var idx = 0; idx < dsKapal.length; idx++) {
                                        if(dsKapal[idx].NamaPenyebrangan == item.NamaPenyebrangan){
                                            dsKapal[idx].value = dsKapal[idx].value + item.value;
                                            ketemu = true;
                                        }
                                    }
                                    if(!ketemu)
                                    {
                                        dsKapal.push({
                                            NamaPenyebrangan: item.NamaPenyebrangan,
                                            value: item.value,
                                        })
                                    }
                                }
                            });
                            //uang
                            var dummyTotal = 0;
                            dsDummy[0].listTfBorongan.forEach(function (item) {
                                var ketemu = false;
                                for (var idx = 0; idx < dsGridUang.length; idx++) {
                                    if(dsGridUang[idx].Nama == item.Nama){
//                                        dsGridUang[idx].value = dsGridUang[idx].value + item.value;
                                        ketemu = true;
                                        dummyTotal = dummyTotal + dsGridUang[idx].value;
                                    }
                                }
                                if(!ketemu)
                                {
                                    var _date = new Date($('#tglmuatbuatuang').val());
                                    var leadTime = item.LeadTime == null ? 0 : item.LeadTime;
                                    var currDate = new Date(_date.setDate(_date.getDate() + leadTime));
                                    dummyTotal = dummyTotal + item.value;
                                    dsGridUang.push({
                                        Nama: item.Nama,
                                        value: item.value,
                                        Nama1: item.Nama,
                                        value1: item.value,
                                        Tanggal: currDate,
                                    })
                                }
                            });

                            ketemu = false;
                            for (var idx = 0; idx < dsGridUang.length; idx++) {
                                if(dsGridUang[idx].Nama == "Tunai"){
                                    dsGridUang[idx].value = dsGridUang[idx].value + dsDummy[0].AlokasiCash;
                                    ketemu = true;
                                }
                            }
                            if(!ketemu) {
                                if(dsDummy[0].AlokasiCash != null)
                                {
                                    dsGridUang.push({
                                        Nama: "Tunai",
                                        value: dsDummy[0].AlokasiCash,
                                        Nama1: "Tunai",
                                        value1: dsDummy[0].AlokasiCash,
                                        Tanggal: new Date($('#tglmuatbuatuang').val()),
                                    })
                                }
                            }
                        }
                    }
                }
            }

            gridSpbu.dataSource.data(dsSolar);
            gridKapal.dataSource.data(dsKapal);
            gridUang.dataSource.data(dsGridUang);

            CalculateBorongan();
            CalculatePotongan();
            generateAlokasiTambahan();
        }

        $('#formsubmit').submit(function (e) {
            $('#StrSolar').val(JSON.stringify(gridSpbu.dataSource.data()));
            $('#StrKapal').val(JSON.stringify(gridKapal.dataSource.data()));
            gridUang.saveRow();
            $('#StrUang').val(JSON.stringify(gridUang.dataSource.data()).replace(/Nama1/g, "Nama").replace(/value1/g, "value"));
        })

        function generateAlokasiTambahan()
        {
            total_cash = 0;
            for (var i = 0 ; i <= idxLain ; i++) {
                if ($("#ModelListTambahanLain_" + i + "__IsDelete").val() == "false" || $("#ModelListTambahanLain_" + i + "__IsDelete").val() == "False") {
                    var cash = $("#ModelListTambahanLain_" + i + "__Value").data("kendoNumericTextBox").value() % 100000;
                    var tf = $("#ModelListTambahanLain_" + i + "__Value").data("kendoNumericTextBox").value() - cash;
                    var dataDummy = gridUang.dataSource.data();
                    var isTf = false;
                    dsGridUang = [];
                    for(idx = 0 ; idx < dataDummy.length ; idx++)
                    {
                        if(dataDummy[idx].Nama == "Tunai") {
                            dsGridUang.push({
                                Nama: dataDummy[idx].Nama,
                                value: dataDummy[idx].value + cash,
                                Nama1: dataDummy[idx].Nama,
                                value1: dataDummy[idx].value + cash,
                                Tanggal: dataDummy[idx].Tanggal,
                            });
                        } else if(dataDummy[idx].Nama == "Transfer 1") {
                            dsGridUang.push({
                                Nama: dataDummy[idx].Nama,
                                value: dataDummy[idx].value + tf,
                                Nama1: dataDummy[idx].Nama,
                                value1: dataDummy[idx].value + tf,
                                Tanggal: dataDummy[idx].Tanggal,
                            });
                            isTf = true;
                        } else {
                            dsGridUang.push({
                                Nama: dataDummy[idx].Nama,
                                value: dataDummy[idx].value,
                                Nama1: dataDummy[idx].Nama,
                                value1: dataDummy[idx].value,
                                Tanggal: dataDummy[idx].Tanggal,
                            });
                        }
                    }
                    if(isTf === false && tf > 0) {
                        dsGridUang.push({
                            Nama: "Transfer 1",
                            value: tf,
                            Nama1: "Transfer 1",
                            value1: tf,
                            Tanggal: new Date($('#tglmuatbuatuang').val()),
                        });
                    }

                    gridUang.dataSource.data(dsGridUang);

                    $("#TotalAlokasi").data("kendoNumericTextBox").value($("#TotalAlokasi").data("kendoNumericTextBox").value() + (cash + tf));

                    $('#dummyTambahanCash_' + i).val(cash);
                    $('#dummyTambahanTf_' + i).val(tf);
                }
            }

            for (var i = 0 ; i <= idxPotongan ; i++)
            {
                if ($("#ModelListPotonganLain_" + i + "__IsDelete").val() == "false" || $("#ModelListPotonganLain_" + i + "__IsDelete").val() == "False")
                {
                    var cash = $("#ModelListPotonganLain_" + i + "__Value").data("kendoNumericTextBox").value() % 100000;
                    var tf = $("#ModelListPotonganLain_" + i + "__Value").data("kendoNumericTextBox").value() - cash;
                    var dataDummy = gridUang.dataSource.data();
                    total_cash += $("#ModelListPotonganLain_" + i + "__Value").data("kendoNumericTextBox").value()

                    var isTf = false;
                    $("#TotalAlokasi").data("kendoNumericTextBox").value($("#TotalAlokasi").data("kendoNumericTextBox").value() - (cash + tf));

                    $('#dummyPotonganCash_' + i).val(cash);
                    $('#dummyPotonganTf_' + i).val(tf);
                }
            }
/*
            //kasbon
            var total_kasbon = $("#KasbonDriver1").data("kendoNumericTextBox").value() + $("#KasbonDriver2").data("kendoNumericTextBox").value() + $("#KlaimDriver1").data("kendoNumericTextBox").value() 
                + $("#KlaimDriver2").data("kendoNumericTextBox").value()
            var cash =  total_kasbon % 100000;
            var tf = total_kasbon - cash;
            var dataDummy = gridUang.dataSource.data();
            var selisih_tunai = 0;
            var selisih_tf = 0;
            total_cash += total_kasbon
            mod_total_cash = total_cash % 100000;
            total_tf = total_cash - mod_total_cash;

            var isTf = false;
            dsGridUang = [];
            var has_tunai = false;
            for(idx = 0 ; idx < dataDummy.length ; idx++){
                if(dataDummy[idx].Nama == "Tunai") {
                    has_tunai = true;
                    break;
                }
            }
            for(idx = 0 ; idx < dataDummy.length ; idx++)
            {
                if(dataDummy[idx].Nama == "Tunai")
                    selisih_tunai = dataDummy[idx].value - mod_total_cash
            }
            for(idx = 0 ; idx < dataDummy.length ; idx++)
            {
                if(dataDummy[idx].Nama == "Transfer 1")
                    selisih_tf = selisih_tunai < 0 ? dataDummy[idx].value - total_tf + selisih_tunai : dataDummy[idx].value - total_tf
            }
            if (has_tunai){
                for(idx = 0 ; idx < dataDummy.length ; idx++)
                {
                    if(dataDummy[idx].Nama == "Tunai") {
                        dsGridUang.push({
                            Nama: dataDummy[idx].Nama,
                            value: selisih_tunai < 0 ? 0 : selisih_tf < 0 ? dataDummy[idx].value - mod_total_cash + selisih_tf : dataDummy[idx].value - mod_total_cash,
                            Nama1: dataDummy[idx].Nama,
                            value1: selisih_tunai < 0 ? 0 : selisih_tf < 0 ? dataDummy[idx].value - mod_total_cash + selisih_tf : dataDummy[idx].value - mod_total_cash,
                            Tanggal: dataDummy[idx].Tanggal,
                        });
                    } else if(dataDummy[idx].Nama == "Transfer 1") {
                        dsGridUang.push({
                            Nama: dataDummy[idx].Nama,
                            value: selisih_tf < 0 ? 0 : selisih_tunai < 0 ? dataDummy[idx].value - total_tf + selisih_tunai : dataDummy[idx].value - total_tf,
                            Nama1: dataDummy[idx].Nama,
                            value1: selisih_tf < 0 ? 0 : selisih_tunai < 0 ? dataDummy[idx].value - total_tf + selisih_tunai : dataDummy[idx].value - total_tf,
                            Tanggal: dataDummy[idx].Tanggal,
                        });
                        isTf = true;
                    } else {
                        dsGridUang.push({
                            Nama: dataDummy[idx].Nama,
                            value: dataDummy[idx].value,
                            Nama1: dataDummy[idx].Nama,
                            value1: dataDummy[idx].value,
                            Tanggal: dataDummy[idx].Tanggal,
                        });
                    }
                }
            }
            else{
                for(idx = 0 ; idx < dataDummy.length ; idx++)
                {
                    if(dataDummy[idx].Nama == "Transfer 1") {
                        dsGridUang.push({
                            Nama: dataDummy[idx].Nama,
                            value: dataDummy[idx].value - total_cash,
                            Nama1: dataDummy[idx].Nama,
                            value1: dataDummy[idx].value - total_cash,
                            Tanggal: dataDummy[idx].Tanggal,
                        });
                        isTf = true;
                    } else {
                        dsGridUang.push({
                            Nama: dataDummy[idx].Nama,
                            value: dataDummy[idx].value,
                            Nama1: dataDummy[idx].Nama,
                            value1: dataDummy[idx].value,
                            Tanggal: dataDummy[idx].Tanggal,
                        });
                    }
                }
            }
            gridUang.dataSource.data(dsGridUang);

            $("#TotalAlokasi").data("kendoNumericTextBox").value($("#TotalAlokasi").data("kendoNumericTextBox").value() - (cash + tf));
*/
        }
    function call_piutang(piutang_type){
        dsPiutang = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '/Driver/BindingPiutangHistory?id=' + $("#IdDriver1").val() + '&piutang_type=' + piutang_type ,
                    dataType: "json"
                },
            },
            schema: {
                model: {
                    fields: {
                        Tanggal: { type: "string" },
                        Keterangan: { type: "string" },
                        Jumlah: { type: "number" },
                        Saldo: { type: "number" },
                        Id: { type: "number" },
                    }
                }
            },
        });

        $("#gridPiutang").kendoGrid({
            dataSource: dsPiutang,
            columns: [
                {
                    field: "Tanggal",
                    title: "Tanggal",
                    template: "#= kendo.toString(kendo.parseDate(Tanggal, 'yyyy-MM-dd'), 'MM/dd/yyyy') #"
                },
                {
                    field: "Keterangan",
                    title: "Keterangan"
                },
                {
                    field: "Jumlah",
                    template: 'Rp #: kendo.format("{0:n}", Jumlah)#',
                    attributes: { style: "text-align:right;" },
                    title: "Jumlah"
                },
                {
                    field: "Saldo",
                    template: 'Rp #: kendo.format("{0:n}", Saldo)#',
                    attributes: { style: "text-align:right;" },
                    title: "Saldo"
                }
            ],
        }).data("kendoGrid");
    }

    function editItem(e) {
        var dsSPBU = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '/Base/GetSPBU',
                    dataType: "json"
                },
            },
        });
        currData = this.dataItem(getDataRowGrid(e));
        $.ajax({
            url: '/Kasir/Checking?id=' + $('#Id').val(),
            type: "GET",
            success: function (res) {
                $("#ModalSolar").modal('show');
                $("#_NamaSPBU").val(currData.NamaSpbu);
                $("#_JmlTf").data("kendoNumericTextBox").value(currData.value == null || currData.value == 0 ? currData.value : currData.value );
                cboSPBU = $("#_NamaSPBU").kendoComboBox({
                    dataTextField: "Nama",
                    dataValueField: "Id",
                    dataSource: dsSPBU,
                    filter: "contains",
                    suggest: true,
                    index: 3
                }).data("kendoComboBox");
            },
        });
    }

    function saveSolar()
    {
        currData.set("value", $("#_JmlTf").data("kendoNumericTextBox").value());
        currData.set("NamaSpbu", $("#_NamaSPBU").data("kendoComboBox").text());
        $("#ModalSolar").modal('hide');
        generateTotalAlokasi()
    }

    function savePenyebrangan(){
        currData.set("value", $("#_JmlTfPenyebrangan").data("kendoNumericTextBox").value());
        currData.set("NamaPenyebrangan", $("#_NamaPenyebrangan").data("kendoComboBox").text());
        $("#ModalKapal").modal('hide');
        generateTotalAlokasi()
    }

    function editItemPenyebrangan(e) {
        var dsPenyebrangan = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '/Base/GetKapal',
                    dataType: "json"
                },
            },
        });
        currData = this.dataItem(getDataRowGrid(e));
        $.ajax({
            url: '/Kasir/Checking?id=' + $('#Id').val(),
            type: "GET",
            success: function (res) {
                $("#ModalKapal").modal('show');
                $("#_NamaPenyebrangan").val(currData.NamaPenyebrangan);
                $("#_JmlTfPenyebrangan").data("kendoNumericTextBox").value(currData.value == null || currData.value == 0 ? currData.value : currData.value );
                cboSPBU = $("#_NamaPenyebrangan").kendoComboBox({
                    dataTextField: "Nama",
                    dataValueField: "Id",
                    dataSource: dsPenyebrangan,
                    filter: "contains",
                    suggest: true,
                    index: 3
                }).data("kendoComboBox");
            },
        });
    }

    function editItemUang(e) {
        currData = this.dataItem(getDataRowGrid(e));
        $.ajax({
            url: '/Kasir/Checking?id=' + $('#Id').val(),
            type: "GET",
            success: function (res) {
                $("#ModalUang").modal('show');
                $("#_Keterangan").val(currData.Nama);
                $("#_JmlTfUang").data("kendoNumericTextBox").value(currData.value1 == null || currData.value1 == 0 ? currData.value1 : currData.value1 );
                $("#_Tgl").data("kendoDatePicker").value(kendo.toString(kendo.parseDate(currData.Tanggal, 'yyyy-MM-dd'), 'dd/MM/yyyy'));
            },
        });
    }

    function saveUang(){
        currData.set("value", $("#_JmlTfUang").data("kendoNumericTextBox").value());
        currData.set("value1", $("#_JmlTfUang").data("kendoNumericTextBox").value());
        currData.set("Tanggal", $("#_Tgl").val());
        $("#ModalUang").modal('hide');
        generateTotalAlokasi()
    }

    function generateTotalAlokasi(){
        solar = $('#gridSolar tr.k-footer-template td')[2].innerHTML.split("Total : Rp ")[1].split(',00')[0].split('.')
        nom_solar = '';
        for (x = 0; x < solar.length; x++){
            nom_solar += solar[x];
        }
        kapal = $('#gridKapal tr.k-footer-template td')[2].innerHTML.split("Total : Rp ")[1].split(',00')[0].split('.')
        nom_kapal = '';
        for (x = 0; x < kapal.length; x++){
            nom_kapal += kapal[x];
        }
        uang = $('#gridUang tr.k-footer-template td')[2].innerHTML.split("Total : Rp ")[1].split(',00')[0].split('.')
        nom_uang = '';
        for (x = 0; x < uang.length; x++){
            nom_uang += uang[x];
        }
        $('#TotalAlokasi').data("kendoNumericTextBox").value(parseFloat(nom_solar)+parseFloat(nom_kapal)+parseFloat(nom_uang));
    }

    </script>
    <script type="text/javascript" src="~/Content/Driver/InitialGridSo.js"></script>
}