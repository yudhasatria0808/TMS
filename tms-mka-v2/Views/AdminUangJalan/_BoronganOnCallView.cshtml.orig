@using tms_mka_v2.Models;
@model tms_mka_v2.Models.AdminUangJalan
@{
    int idxRute = Model.ModelListTambahanRute.Count();
    int idxLain = Model.ModelListTambahanLain.Count();
    int idxPotongan = Model.ModelListPotonganLain.Count();
}
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBox("bor0", Model.ModelListBorongan[0].NamaDataBorongan, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div id="CountainerBorongan">
            @for (int i = 0; i <= Model.ModelListBorongan.Count() - 1; i++)
            {
                if (i == 0)
                {

                }
                else
                {
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.TextBox("bor"+i, Model.ModelListBorongan[i].NamaDataBorongan, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                    
                        }
                }
            </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Harga Borongan</label>
            <div class="col-md-7">
                @Html.TextBox("nilbor", Model.NilaiBorongan, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Kawalan</label>
            <div class="col-md-7">
                @Html.TextBox("kwln", Model.Kawalan, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Timbangan</label>
            <div class="col-md-7">
                @Html.TextBox("tmbgn",Model.Timbangan, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Karantina</label>
            <div class="col-md-7">
                @Html.TextBox("krnt",Model.Karantina, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> SPSI</label>
            <div class="col-md-7">
                @Html.TextBox("spsiview",Model.SPSI, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Multidrop</label>
            <div class="col-md-7">
                @Html.TextBox("md", Model.Multidrop, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Tambahan Rute muat</label>
        </div>
        <div id="tambahanRute">
            @for (int i = 0; i <= Model.ModelListTambahanRute.Count() - 1; i++)
            {
            <div class="form-group">
                <div class="col-md-5">
                    @Html.TextBox("rut"+i,Model.ModelListTambahanRute[i].NamaDataBorongan, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-7">
                    @Html.TextBox("rutval"+i, Model.ModelListTambahanRute[i].value, new { @class = "form-control-numeric-idr", @readonly = true })
                </div>
            </div>
            }
        </div>
        <div class="form-group">
            <label class="control-label col-md-5"> Tambahan Rute lain</label>
        </div>
        <div id="tambahanLain">
            @for (int i = 0; i <= Model.ModelListTambahanLain.Count() - 1; i++)
            {
                <div class="form-group">
                    <div class="col-md-5">
                        @Html.TextBox("tmbhn"+i, Model.ModelListTambahanLain[i].Keterangan, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBox("valtmbh"+i, Model.ModelListTambahanLain[i].Value, new { @class = "form-control-numeric-idr", @readonly = true })
                    </div>
                </div>
            }
        </div>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-5"> Total Borongan</label>
            <div class="col-md-7">
                @Html.TextBox("totalbor",Model.TotalBorongan, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label"> Keterangan Admin</label>
                @Html.TextArea("ketadmn",Model.KeteranganAdmin, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label class="control-label col-md-4"> Driver 1</label>
            <div class="col-md-6">
                @Html.TextBox("drvr1",Model.NamaDriver1, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Sebelumnya</label>
            <div class="col-md-6">
                @Html.TextBox("olddrvr1",Model.NamaDriverOld1, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label"> Keterangan Penggantian</label>
                @Html.TextArea("ketdrvr1",Model.KeteranganGanti1, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Driver 2</label>
            <div class="col-md-6">
                @Html.TextBox("drvr2",Model.NamaDriver2, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Sebelumnya</label>
            <div class="col-md-6">
                @Html.TextBox("olddrvr2", Model.NamaDriverOld2, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label"> Keterangan Penggantian</label>
                @Html.TextArea("ketdrvr2",Model.KeteranganGanti2, new { @class = "form-control input-sm", @readonly = true })
            </div>
        </div>
        <br />
        <div class="form-group">
            <label class="control-label col-md-4"> Total Kasbon</label>
            <div class="col-md-6">
                @Html.TextBox("ttlkasbon",Model.TotalKasbon, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
            <div class="col-md-1">
                <button class="btn btn-sm">Detail</button>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> &nbsp;&nbsp;&nbsp;&nbsp; Kasbon Driver 1</label>
            <div class="col-md-6">
                @Html.TextBox("ksbndrvr1",Model.KasbonDriver1, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> &nbsp;&nbsp;&nbsp;&nbsp; Kasbon Driver 2</label>
            <div class="col-md-6">
                @Html.TextBox("ksbndrvr2", Model.KasbonDriver2, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Total Klaim</label>
            <div class="col-md-6">
                @Html.TextBox("ttlklaim", Model.TotalKlaim, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
            <div class="col-md-1">
                <button class="btn btn-sm">Detail</button>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> &nbsp;&nbsp;&nbsp;&nbsp; Klaim Driver 1</label>
            <div class="col-md-6">
                @Html.TextBox("klmdrvr1" , Model.KlaimDriver1, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> &nbsp;&nbsp;&nbsp;&nbsp; Klaim Driver 2</label>
            <div class="col-md-6">
                @Html.TextBox("klmdrvr2" , Model.KlaimDriver2, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Potongan Lain Driver 1</label>
        </div>
        <div id="potonganDriver1" class="form-group">
            @for (int i = 0; i <= Model.ModelListPotonganLain.Count() - 1; i++)
            {
                if (Model.ModelListPotonganLain[i].TypeDriver == 1)
                {
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.TextBox("ketpot"+i, Model.ModelListPotonganLain[i].Keterangan, new { @class = "form-control input-sm" , @readonly = true})
                        </div>
                        <div class="col-md-6">
                            @Html.TextBox("valpot"+i , Model.ModelListPotonganLain[i].Value, new { @class = "form-control-numeric-idr", @readonly = true })
                        </div>
                    </div>
                }
            }
        </div>
        <div class="form-group">
            <label class="control-label col-md-4"> Potongan Lain Driver 2</label>
        </div>
        <div id="potonganDriver2" class="form-group">
            @for (int i = 0; i <= Model.ModelListPotonganLain.Count() - 1; i++)
            {
                if (Model.ModelListPotonganLain[i].TypeDriver == 2)
                {
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.TextBox("ketpotdrvr2" + i, Model.ModelListPotonganLain[i].Keterangan, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBox("valpotdrvr2" + i, Model.ModelListPotonganLain[i].Value, new { @class = "form-control-numeric-idr", @readonly = true })
                        </div>
                    </div>
                }
            }
        </div>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-4"> Total</label>
            <div class="col-md-6">
                @Html.TextBox("ttlpot" , Model.TotalPotonganDriver, new { @class = "form-control-numeric-idr", @readonly = true })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <div class="col-md-12">
                <label>Voucher Solar</label>
                <div id="gridSolar"></div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label>Voucher Kapal</label>
                <div id="gridKapal"></div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label>Uang</label>
                <div id="gridUang"></div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="col-md-4">
                    <button type="button" class="btn btn-sm" onclick="printItem( @Model.IdSalesOrder, null)">Print Hitungan Driver</button>
                </div>
                <div class="col-md-4">
                    <button type="button" class="btn btn-sm" onclick="printSuratJalan(@Model.IdSalesOrder, null)">Print Bukti Pengiriman</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
<script type="text/javascript">
    var idxRute = @idxRute;
<<<<<<< HEAD
</script>
}
=======
    function AddTambahanRute() {
        @{
            Model.ModelListTambahanRute.Add(new AdminUangJalanTambahanRute());
        }
        var markup = '<div id="tambahanRute' + idxRute + '" class="form-group">' +
            '<div class="col-md-5">' +
            '<input type="hidden" id="ModelListTambahanRute_' + idxRute + '__IsDelete" name="ModelListTambahanRute[' + idxRute + '].IsDelete" value="false" />' +
            '<input class="IdDataBorongan' + idxRute + '" data-val="true" data-val-required="Data borongan harus diisi." id="ModelListTambahanRute_' + idxRute + '__IdDataBorongan" name="ModelListTambahanRute[' + idxRute + '].IdDataBorongan" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListTambahanRute_' + idxRute + 'IdDataBorongan" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-5">' +
            '<input class="valRute'+ idxRute +'" id="ModelListTambahanRute_' + idxRute + '__value" name="ModelListTambahanRute[' + idxRute + '].value" readonly />' +
            '</div>' +
            '<div class="col-md-2">' +
            '<a class="btn btn-sm btn-circle btn-icon-only red" href="javascript:;" onclick="deleteTambahanRute(' + idxRute + ')"><i class="fa fa-minus"></i></a>' +
            '</div>' +
            '</div>'
        $("#tambahanRute").append(markup);
        var txtval = $('.valRute' + idxRute).kendoNumericTextBox({
            min: 0,
            max: 1000000000000000000,
            decimals: 2,
            format: "Rp ###,###.00 ",
            spinners: false,
        }).data("kendoNumericTextBox");
        CreateCboRute(idxRute, txtval);

        idxRute++;
    }
    function deleteTambahanRute(idx) {
        $('#tambahanRute' + idx).hide();
        $('#ModelListTambahanRute_' + idx + '__IsDelete').val(true);
        CalculateBorongan();
    }

    var idxLain = @idxLain;
    function AddTambahanLain() {
        @{
            Model.ModelListTambahanLain.Add(new AdminUangJalanTambahanLain());
        }
        var markup = '<div id="tambahanLain' + idxLain + '" class="form-group">' +
            '<div class="col-md-5">' +
            '<input type="hidden" id="ModelListTambahanLain_' + idxLain + '__IsDelete" name="ModelListTambahanLain[' + idxLain + '].IsDelete" value="false" />' +
            '<input class="form-control input-sm" data-val="true" data-val-required="Keterangan harus diisi." id="ModelListTambahanLain_' + idxLain + '__Keterangan" name="ModelListTambahanLain[' + idxLain + '].Keterangan" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListTambahanLain_' + idxLain + 'Keterangan" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-5">' +
            '<input class="valLain'+ idxLain +'" data-val="true" data-val-required="Nilai harus diisi." id="ModelListTambahanLain_' + idxLain + '__Value" name="ModelListTambahanLain[' + idxLain + '].Value" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListTambahanLain_' + idxLain + 'Value" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-2">' +
            '<a class="btn btn-sm btn-circle btn-icon-only red" href="javascript:;" onclick="deleteTambahanLain(' + idxLain + ')"><i class="fa fa-minus"></i></a>' +
            '</div>' +
            '</div>'
        $("#tambahanLain").append(markup);
        $('.valLain' + idxLain).kendoNumericTextBox({
            min: 0,
            max: 1000000000000000000,
            decimals: 2,
            format: "Rp ###,###.00 ",
            spinners: false,
            change: function(e){
                CalculateBorongan();
            }
        });
        idxLain++;
    }
    function deleteTambahanLain(idx) {
        $('#tambahanLain' + idx).hide();
        $('#ModelListTambahanLain_' + idx + '__IsDelete').val(true);
        CalculateBorongan();
    }

    var idxPotongan = @idxPotongan;
    function AddPotonganLain1() {
        @{
            Model.ModelListPotonganLain.Add(new AdminUangJalanPotonganLain());
        }
        var markup = '<div id="potonganLain1' + idxPotongan + '" class="form-group">' +
            '<div class="col-md-4">' +
            '<input type="hidden" id="ModelListPotonganLain_' + idxPotongan + '__IsDelete" name="ModelListPotonganLain[' + idxPotongan + '].IsDelete" value="false" />' +
            '<input type="hidden" id="ModelListPotonganLain_' + idxPotongan + '__TypeDriver" name="ModelListPotonganLain[' + idxPotongan + '].TypeDriver" value="1" />' +
            '<input class="form-control input-sm" data-val="true" data-val-required="Keterangan harus diisi." id="ModelListPotonganLain_' + idxPotongan + '__Keterangan" name="ModelListPotonganLain[' + idxPotongan + '].Keterangan" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListPotonganLain_' + idxPotongan + 'Keterangan" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-6">' +
            '<input class="valPotonganDriver1'+ idxPotongan +'" data-val="true" data-val-required="Nilai harus diisi." id="ModelListPotonganLain_' + idxPotongan + '__Value" name="ModelListPotonganLain[' + idxPotongan + '].Value" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListPotonganLain_' + idxPotongan + 'Value" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-2">' +
            '<a class="btn btn-sm btn-circle btn-icon-only red" href="javascript:;" onclick="deletePotonganLain1(' + idxPotongan + ')"><i class="fa fa-minus"></i></a>' +
            '</div>' +
            '</div>'
        $("#potonganDriver1").append(markup);
        $('.valPotonganDriver1' + idxPotongan).kendoNumericTextBox({
            min: 0,
            max: 1000000000000000000,
            decimals: 2,
            format: "Rp ###,###.00 ",
            spinners: false,
            change: function(e)
            {
                CalculatePotongan();
            }
        });
        idxPotongan++;
    }
    function deletePotonganLain1(idx) {
        $('#potonganLain1' + idx).hide();
        $('#ModelListPotonganLain_' + idx + '__IsDelete').val(true);
        CalculatePotongan()
    }
    function AddPotonganLain2() {
        @{
            Model.ModelListPotonganLain.Add(new AdminUangJalanPotonganLain());
        }
        var markup = '<div id="potonganLain2' + idxPotongan + '" class="form-group">' +
            '<div class="col-md-4">' +
            '<input type="hidden" id="ModelListPotonganLain_' + idxPotongan + '__IsDelete" name="ModelListPotonganLain[' + idxPotongan + '].IsDelete" value="false" />' +
            '<input type="hidden" id="ModelListPotonganLain_' + idxPotongan + '__TypeDriver" name="ModelListPotonganLain[' + idxPotongan + '].TypeDriver" value="2" />' +
            '<input class="form-control input-sm" data-val="true" data-val-required="Keterangan harus diisi." id="ModelListPotonganLain_' + idxPotongan + '__Keterangan" name="ModelListPotonganLain[' + idxPotongan + '].Keterangan" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListPotonganLain_' + idxPotongan + 'Keterangan" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-6">' +
            '<input class="valPotonganDriver2'+ idxPotongan +'" data-val="true" data-val-required="Nilai harus diisi." id="ModelListPotonganLain_' + idxPotongan + '__Value" name="ModelListPotonganLain[' + idxPotongan + '].Value" />' +
            '<span class="field-validation-valid" data-valmsg-for="ModelListPotonganLain_' + idxPotongan + 'Value" data-valmsg-replace="true"></span>' +
            '</div>' +
            '<div class="col-md-2">' +
            '<a class="btn btn-sm btn-circle btn-icon-only red" href="javascript:;" onclick="deletePotonganLain2(' + idxPotongan + ')"><i class="fa fa-minus"></i></a>' +
            '</div>' +
            '</div>'
        $("#potonganDriver2").append(markup);
        $('.valPotonganDriver2' + idxPotongan).kendoNumericTextBox({
            min: 0,
            max: 1000000000000000000,
            decimals: 2,
            format: "Rp ###,###.00 ",
            spinners: false,
            change: function(e)
            {
                CalculatePotongan();
            }
        });
        idxPotongan++;
    }
    function deletePotonganLain2(idx) {
        $('#potonganLain2' + idx).hide();
        $('#ModelListPotonganLain_' + idx + '__IsDelete').val(true);
        CalculatePotongan();
    }

    function CreateCboRute(_idx, _txtval) {
        $('.IdDataBorongan' + _idx).kendoComboBox({
            dataSource: {
                //serverFiltering: true,
                transport: {
                    read: {
                        url: '/DataBorongan/GetBoronganTambahan',
                        dataType: "json"
                    },
                },
            },
            dataTextField: "NamaBorongan",
            dataValueField: "Id",
            filter: "contains",
            suggest: true,
            change: function(e){
                //cek hela aya anu sarua teu ? mun aya teu menang aya anu sarua ( kalem lieur euy )
                var id = this.value();

                //for (var i = 0 ; i <= idxRute ; i++)
                //{
                //    if ($("#ModelListTambahanRute_" + i + "__IsDelete").val() == "false")
                //    {
                //        if($("#ModelListTambahanRute_" + i + "__IdDataBorongan").val() == this.value)
                //        {
                //            alert('geus aya coy')
                //        }
                //    }
                //}
                $.ajax({
                    url: '/DataBorongan/FindById?id=' + id,
                    type: "POST",
                    success: function (res) {
                        var data = jQuery.parseJSON(res);
                        _txtval.value(data.Pembulatan);
                        CalculateBorongan();
                    },
                });
            }
            //minLength: 3,
            //autoBind: false,
        });
    }

    function SelectDriver(e) {
        e.preventDefault();
        var data = this.dataItem(getDataRowGrid(e));
        if (caller == 1) {
            if (data.Id == $('#IdDriver2').val()) {
                swal(' ', 'Driver ' + data.NamaDriver + ' sudah dipilih.', 'warning');
            }
            else {
                $('#IdDriverOld1 ').val($('#IdDriver1').val());
                $('#NamaDriverOld1').val($('#NamaDriver1').val());
                $('#IdDriver1').val(data.Id);
                $('#NamaDriver1').val(data.KodeDriver + ' - ' + data.NamaDriver);
            }
        }
        else if (caller == 2) {
            if (data.Id == $('#IdDriver1').val()) {
                swal(' ', 'Driver ' + data.NamaDriver + ' sudah dipilih.', 'warning');
            }
            else {
                $('#IdDriverOld2 ').val($('#IdDriver2').val());
                $('#NamaDriverOld2').val($('#NamaDriver2').val());
                $('#IdDriver2').val(data.Id);
                $('#NamaDriver2').val(data.KodeDriver + ' - ' + data.NamaDriver);
            }
        }
        $('#ModalMasterDriver').modal('hide');
    }
    function printItem(id) {
        window.location.href = "@Url.Action("Print")" + "?idSo=" + id;
    }
    function printSuratJalan(id) {
        window.location.href = "@Url.Action("PrintSuratJalan")" + "?idSo=" + id;
    }
</script>
>>>>>>> b0e15442cfaafaca734f17bcde1301436053df38
