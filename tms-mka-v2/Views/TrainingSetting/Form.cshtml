@using tms_mka_v2.Models;

@model tms_mka_v2.Models.TrainingSetting
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    string backLink = Url.Action("Index");
    if (currentAction == "Add")
    {
        ViewBag.Title = "Tambah Training Setting";
    }
    else
    {
        ViewBag.Title = ViewBag.name + " | Edit";
    }
}
<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
    </div>
    <div class="portlet-body form">
        @using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @class = "form-horizontal form-label-left input_mask", @id = "formsubmit" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Nama, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Nama, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Nama)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Interval, new { @class = "control-label col-md-2 col-sm-3 col-xs-12 " })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    <div class="input-group input-group-sm">
                        @Html.TextBoxFor(model => model.Interval, new { @class = "form-control" })
                        <span class="input-group-btn">
                            <button class="btn btn-sm default" type="button">
                                Bulan
                            </button>
                        </span>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Interval)
            </div>
            <div class="form-group">
                <div class="col-md-8">
                    <div id="gridDetails"></div>
                    @Html.HiddenFor(model => model.strTrainingSettingDetail)
                </div>
            </div>
            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-2">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <a href="@backLink" class="btn btn-link">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var dsGrid = [];
        @foreach (TrainingSettingDetail item in Model.listTrainingSetting)
        {
            <text>
            dsGrid.push({
                Id: parseInt('@item.Id'),
                Materi: '@item.Materi',
                NilaiMinimum: '@item.NilaiMinimum'
            })
            </text>
        }
        
        $(document).ready(function () {
            $("#gridDetails").kendoGrid({
                dataSource: {
                    data: dsGrid,
                    schema: {
                        model: {
                            fields: {
                                Id: { type: "number" },
                                Materi: { type: "string" },
                                NilaiMinimum: { type: "number" }
                            }
                        }
                    },
                },
                editable: { mode: "inline", confirmation: "Anda yakin menghapus data?" },
                toolbar: [{ name: "create", text: "Tambah" }],
                columns: [
                    {
                        command: [
                            {
                                name: "edit",
                                text: "Edit",
                                imageClass: "glyphicon glyphicon-edit",
                                template: '<a class="k-button-icon #=className#" #=attr# title="edit" href="\\#"><span class="#=imageClass#"></span></a>'
                            },
                            {
                                name: "destroy",
                                text: "Hapus",
                                imageClass: "glyphicon glyphicon-remove",
                                template: '<a class="k-button-icon #=className#" #=attr# href="\\#" title="#=text#"><span class="#=imageClass#"></span></a>'
                            }
                        ],
                        width: 90
                    },
                    {
                        field: "Materi",
                        title: "Materi",
                        editor: EditorTxt
                    },
                    {
                        field: "NilaiMinimum",
                        title: "Nilai Minimum",
                        editor: EditorTxt
                    }
                ],
                edit: function (e) {
                    var detailCell = e.container.find("td:first");
                    detailCell.html('');
                    var commandCell = e.container.find("td:nth-child(1)");
                    commandCell.html('<a class="k-button-icon k-grid-update form-inline" href="\\#" title="Simpan"><span class="glyphicon glyphicon-floppy-saved"></span></a> <a class="k-button-icon k-grid-cancel form-inline" href="\\#" title="Batal"><span class="glyphicon glyphicon-remove"></span></a>');
                    var commandGroupCell = e.container.find("td:nth-child(0)");
                    commandGroupCell.html('');
                },
                save: function (e) {
                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "positionClass": "toast-top-center",
                        "onclick": null,
                        "showDuration": "1000",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    }
                }
            }).data("kendoGrid");
        });
        function EditorTxt(container, options) {
            $('<input class="k-input k-textbox" name="' + options.field + '" data-value-field="Value" data-bind="value:' + options.field + '"/>')
                            .appendTo(container);
        }
        $('#formsubmit').submit(function (e) {
            var grid = $('#gridDetails').data('kendoGrid');
            grid.saveRow();
            var data = grid.dataSource.data();
            $('#strTrainingSettingDetail').val(JSON.stringify(data));
        })
    </script>
}
