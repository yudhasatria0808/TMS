@using tms_mka_v2.Models;

@model tms_mka_v2.Models.Mekanik
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    string backLink = Url.Action("Index");
    if (currentAction == "Add")
    {
        ViewBag.Title = "Tambah Mekanik";
    }
    else
    {
        ViewBag.Title = ViewBag.name + " | Edit";
    }
}
<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
    </div>
    <div class="portlet-body form">
        @using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @class = "form-horizontal form-label-left input_mask", @id = "formsubmit" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                        @Html.LabelFor(model => model.NamaMekanik, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.NamaMekanik, new { @class = "form-control input-sm focus" })
                            @Html.ValidationMessageFor(model => model.NamaMekanik)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdBagian, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.IdBagian)
                            @Html.ValidationMessageFor(model => model.IdBagian)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdGrade, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.IdGrade)
                            @Html.ValidationMessageFor(model => model.IdGrade)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keterampilan, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-9 col-xs-12">
                            @Html.TextBoxFor(model => model.Keterampilan, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.Keterampilan)
                        </div>
                    </div>

            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-2">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <a href="@backLink" class="btn btn-link">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script type="text/javascript">

    $(document).ready(function () {
        //bagian
        var dsBagian = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetBagian")',
                        dataType: "json"
                    },
                },
            });
        //grade
        var dsGrade = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: '@Url.Action("GetGrade")',
                        dataType: "json"
                    },
                },
            });
        InitLookUp($("#IdBagian"), dsBagian);
        InitLookUp($("#IdGrade"), dsGrade);
        })
</script>
}
