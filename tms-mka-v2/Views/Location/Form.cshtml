
@using tms_mka_v2.Models;

@model tms_mka_v2.Models.Location
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    string backLink = Url.Action("Index");
    if (currentAction == "Add")
    {
        ViewBag.Title = "Tambah Location";
    }
    else
    {
        ViewBag.Title = ViewBag.name + " | Edit";
    }
}
<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
    </div>
    <div class="portlet-body form">
        @using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @class = "form-horizontal form-label-left input_mask" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.ParentId, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.ParentId, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.ParentId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Code, new { @class = "form-control input-sm focus" })
                    @Html.ValidationMessageFor(model => model.Code)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Type, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Type)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Nama, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Nama, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Nama)
                </div>
            </div>

            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-2">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <a href="@backLink" class="btn btn-link">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function OnTypeChange(e) {
            if (this.value() != "") {
                SetParent(this.value());
            }
            else {
                var combobox;
                combobox = $("#ParentId").data("kendoComboBox");
                combobox.text('');
                combobox.value();
                combobox.setDataSource();
            }
        }
        function SetParent(Type) {
            var ds = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: '@Url.Action("GetParent")?Type=' + Type,
                        dataType: "json"
                    },
                },
            });
            var combobox;
            combobox = $("#ParentId").data("kendoComboBox");
            combobox.text('');
            combobox.value();
            combobox.setDataSource(ds);
        }
        $(document).ready(function () {
            $("#ParentId").kendoComboBox({
                dataTextField: "Nama",
                dataValueField: "Id",
                filter: "contains",
                suggest: true,
            });

            var combobox;
            SetParent('@Model.Type');
            combobox = $("#ParentId").data("kendoComboBox");
            $("#Type").kendoComboBox({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: [
                    { text: "Provinsi", value: "Provinsi" },
                    { text: "Kab/Kota", value: "Kab/Kota" },
                    { text: "Kecamatan", value: "Kecamatan" },
                    { text: "Kelurahan", value: "Kelurahan" }
                ],
                filter: "contains",
                suggest: true,
                change: OnTypeChange
            });
        });
    </script>
}
